{
  "search_inc_refresh": {
    "intent": {
      "tags": null
    }
  },
  "init": {
    "prvdId": "Provider Id mismatches in /select and /init",
    "prvdfrLoc": "Provider.locations[0].id mismatches in /select and /init",
    "gpsKey0": "gps coordinates in fulfillments[0].end.location mismatch in /select & /init"
  },
  "on_init": {
    "schemaErr0": "/message/order must have required property 'payment'",
    "schemaErr1": "/message/order must have required property 'tags'",
    "tmpstmp": "Timestamp for init api cannot be greater than or equal to on_init api",
    "gpsKey0": "gps coordinates in fulfillments[0].end.location mismatch in /select & /on_init",
    "onInitPriceErr2": "Quoted Price in /on_init INR 695 does not match with the quoted price in /on_select INR 540.00",
    "pymntOnInitObj": "Payment Object can't be null in /on_init",
    "quoteErr0": "Key 'price.value' mismatch: 540.00 !== 695.00",
    "quoteErr1": "Key length mismatch for breakup"
  },
  "confirm": {
    "txnId": "Transaction Id should be same from /select onwards",
    "prvdrId": "Provider Id mismatches in /on_search and /confirm",
    "prvdrLoc": "provider.locations[0].id mismatches in /on_search and /confirm",
    "billingErr0": "Key 'created_at' mismatch: 2024-01-30T07:09:41.531Z !== 2024-01-30T11:33:58.119Z",
    "billingErr1": "Key 'updated_at' mismatch: 2024-01-30T07:09:41.531Z !== 2024-01-30T11:33:58.119Z",
    "gpsErr": "fulfillments[0].end.location gps is not matching with gps in /select",
    "sttlmntdtls": "payment settlement_details mismatch in /on_init & /confirm",
    "quoteErr0": "Key 'price.value' mismatch: 540.00 !== 695.00",
    "quoteErr1": "Key length mismatch for breakup",
    "quoteErr": "Quoted Price in /confirm INR 695 does not match with the quoted price in /on_select INR 540.00"
  },
  "on_confirm": {
    "tmpstmp": "Timestamp for /confirm api cannot be greater than or equal to /on_confirm api",
    "txnId": "Transaction Id should be same from /select onwards",
    "updtdtmstmp": "order.updated_at timestamp should be updated as per the context.timestamp (since default fulfillment state is added)",
    "prvdrId": "Provider Id mismatches in /on_search and /on_confirm",
    "prvdrLoc": "provider.locations[0].id mismatches in /on_search and /on_confirm",
    "billingErr0": "Key 'created_at' mismatch: 2024-01-30T07:09:41.531Z !== 2024-01-30T11:33:58.119Z",
    "billingErr1": "Key 'updated_at' mismatch: 2024-01-30T07:09:41.531Z !== 2024-01-30T11:33:58.119Z",
    "sellerGpsErr": "store gps location /fulfillments[0]/start/location/gps can't change",
    "sellerNameErr": "store name  /fulfillments[0]/start/location/descriptor/name can't change",
    "buyerGpsErr": "fulfillments[0].end.location gps is not matching with gps in /select",
    "quoteErr0": "Key 'price.value' mismatch: 540.00 !== 695.00",
    "quoteErr1": "Key length mismatch for breakup",
    "quoteErr": "Quoted Price in /on_confirm 695 does not match with the quoted price in /on_select 540.00"
  },
  "on_status_pending": {
    "txnId": "Transaction Id should be same from /select onwards"
  },
  "on_status_picked": {
    "invalid_message_id": "Message_id cannot be same for on_status.pending and on_status.picked",
    "txnId": "Transaction Id should be same from /select onwards",
    "updatedAt": "order/updated_at timestamp can't be less than the pickup time"
  },
  "on_status_delivered": {
    "invalid_message_id": "Message_id cannot be same for on_status.delivered and on_status.picked and on_status.pending ",
    "txnId": "Transaction Id should be same from /select onwards",
    "delPickTime": "delivery timestamp (/end/time/timestamp) can't be less than or equal to the pickup timestamp (start/time/timestamp)",
    "updatedAt": "order/updated_at timestamp can't be less than the delivery time"
  }
}
