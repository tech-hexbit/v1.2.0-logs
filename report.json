{
  "search_inc_refresh": {
    "intent": {
      "tags": null
    }
  },
  "on_init": {
    "quoteErr0": "Key length mismatch for breakup"
  },
  "confirm": {
    "quoteErr0": "Key length mismatch for breakup"
  },
  "on_confirm": {
    "schemaErr0": "/message/order/quote must have required property 'breakup'",
    "tmpstmp": "context/timestamp difference between /on_confirm and /confirm should be less than 5 sec",
    "crtdtmstmp": "order.created_at timestamp mismatches in /confirm and /on_confirm",
    "sellerGpsErr": "store gps location /fulfillments[0]/start/location/gps can't change",
    "sellerNameErr": "store name  /fulfillments[0]/start/location/descriptor/name can't change",
    "buyerGpsErr": "fulfillments[0].end.location gps is not matching with gps in /select",
    "onConfirmedAmount": "Quoted price (/on_confirm) doesn't match with the amount in payment.params",
    "quoteErr0": "Key 'price.value' mismatch: 540.00 !== 695.00",
    "quoteErr1": "Key 'breakup' mismatch: [object Object],[object Object],[object Object],[object Object] !== undefined",
    "quoteErr": "Quoted Price in /on_confirm 695 does not match with the quoted price in /on_select 540.00"
  },
  "on_status_pending": {
    "txnId": "Transaction Id should be same from /select onwards"
  },
  "on_status_picked": {
    "invalid_message_id": "Message_id cannot be same for on_status.pending and on_status.picked",
    "txnId": "Transaction Id should be same from /select onwards",
    "updatedAt": "order/updated_at timestamp can't be less than the pickup time"
  },
  "on_status_delivered": {
    "invalid_message_id": "Message_id cannot be same for on_status.delivered and on_status.picked and on_status.pending ",
    "txnId": "Transaction Id should be same from /select onwards",
    "delPickTime": "delivery timestamp (/end/time/timestamp) can't be less than or equal to the pickup timestamp (start/time/timestamp)",
    "updatedAt": "order/updated_at timestamp can't be less than the delivery time"
  }
}
